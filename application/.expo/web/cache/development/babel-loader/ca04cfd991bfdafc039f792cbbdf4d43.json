{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/login/components/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"./style\";\nimport CustomButton from \"../../../components/Button\";\nimport CustomText from \"../../../components/Text\";\nimport { BLACK, GREEN, GRAY, BLUE } from \"../../../components/Color\";\nimport { Input, Block } from 'galio-framework';\nimport { makePostReq } from \"../../../utils/api\";\nimport show from \"../../../utils/showMessage\";\nimport { isLogged } from \"../\";\nimport { useDispatch } from 'react-redux';\nimport { _storeData } from \"../../../utils/storage\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var disabled = email.trim() === '' | password.trim() === '';\n\n  var disabledClass = function disabledClass() {\n    return disabled ? GRAY : BLUE;\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var _await$makePostReq, status, message, data;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(makePostReq('user/login', {\n              email: email.trim(),\n              password: password.trim()\n            }));\n\n          case 3:\n            _await$makePostReq = _context.sent;\n            status = _await$makePostReq.status;\n            message = _await$makePostReq.message;\n            data = _await$makePostReq.data;\n\n            if (!(status === 'ok')) {\n              _context.next = 16;\n              break;\n            }\n\n            show(message, 'success');\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(_storeData('Token', data.token));\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(_storeData('User', JSON.stringify(data.user)));\n\n          case 13:\n            dispatch(isLogged(true));\n            _context.next = 18;\n            break;\n\n          case 16:\n            show(message, 'danger');\n            dispatch(isLogged(false));\n\n          case 18:\n            setLoading(false);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      paddingTop: height * 0.1\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, React.createElement(CustomText, {\n    style: {\n      fontSize: 25,\n      fontWeight: 'bold',\n      color: BLACK\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, \"Welcome back!\"), React.createElement(Block, {\n    style: {\n      width: width * 0.8,\n      marginTop: height * 0.05\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Email Address\",\n    placeholderTextColor: BLACK,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    type: \"email-address\",\n    color: BLACK,\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    placeholderTextColor: BLACK,\n    password: true,\n    viewPass: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), !loading && React.createElement(CustomButton, {\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    style: {\n      marginTop: 30,\n      backgroundColor: disabledClass()\n    },\n    onPress: disabled ? null : handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, \"Login\"), loading && React.createElement(CustomButton, {\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    style: {\n      marginTop: 30,\n      backgroundColor: GRAY\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"Connecting...\")), React.createElement(View, {\n    style: {\n      marginTop: 30,\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, React.createElement(CustomText, {\n    style: {\n      fontSize: 16,\n      marginLeft: 5,\n      color: GREEN,\n      fontWeight: 'bold'\n    },\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPassword');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Change Password\")));\n});","map":{"version":3,"sources":["/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/login/components/Login.js"],"names":["React","useState","styles","CustomButton","CustomText","BLACK","GREEN","GRAY","BLUE","Input","Block","makePostReq","show","isLogged","useDispatch","_storeData","Dimensions","get","height","width","navigation","dispatch","email","setEmail","password","setPassword","loading","setLoading","disabled","trim","disabledClass","handleSubmit","status","message","data","token","JSON","stringify","user","container","paddingTop","fontSize","fontWeight","color","marginTop","text","textAlign","backgroundColor","flex","flexDirection","marginLeft","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Dimensions, SafeAreaView } from 'react-native';\nimport styles from './style';\nimport CustomButton from '../../../components/Button';\nimport CustomText from '../../../components/Text';\nimport { BLACK, GREEN, GRAY, BLUE } from '../../../components/Color';\nimport { Input, Block } from 'galio-framework';\nimport { makePostReq } from '../../../utils/api';\nimport show from '../../../utils/showMessage';\nimport { isLogged } from '../';\nimport { useDispatch } from 'react-redux';\nimport { _storeData } from '../../../utils/storage';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default ({ navigation }) => {\n\tconst dispatch = useDispatch();\n\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\n\tconst disabled = (email.trim() === '') | (password.trim() === '');\n\n\tconst disabledClass = () => {\n\t\treturn disabled ? GRAY : BLUE;\n\t};\n\n\tconst handleSubmit = async () => {\n\t\tsetLoading(true);\n\t\tconst { status, message, data } = await makePostReq('user/login', { email: email.trim(), password: password.trim() });\n\n\t\tif (status === 'ok') {\n\t\t\tshow(message, 'success');\n\t\t\tawait _storeData('Token', data.token);\n\t\t\tawait _storeData('User', JSON.stringify(data.user));\n\t\t\tdispatch(isLogged(true));\n\t\t} else {\n\t\t\tshow(message, 'danger');\n\t\t\tdispatch(isLogged(false));\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={{ ...styles.container, paddingTop: height * 0.1 }}>\n\t\t\t<CustomText style={{ fontSize: 25, fontWeight: 'bold', color: BLACK }}>Welcome back!</CustomText>\n\t\t\t<Block style={{ width: width * 0.8, marginTop: height * 0.05 }}>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder='Email Address'\n\t\t\t\t\tplaceholderTextColor={BLACK}\n\t\t\t\t\tonChangeText={(text) => setEmail(text)}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\ttype='email-address'\n\t\t\t\t\tcolor={BLACK}\n\t\t\t\t\tstyle={{ fontSize: 20 }}\n\t\t\t\t/>\n\n\t\t\t\t<Input placeholder='Password' placeholderTextColor={BLACK} password viewPass onChangeText={(text) => setPassword(text)} value={password} />\n\t\t\t\t{!loading && (\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttextStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }}\n\t\t\t\t\t\tstyle={{ marginTop: 30, backgroundColor: disabledClass() }}\n\t\t\t\t\t\tonPress={disabled ? null : handleSubmit}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</CustomButton>\n\t\t\t\t)}\n\n\t\t\t\t{loading && (\n\t\t\t\t\t<CustomButton textStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }} style={{ marginTop: 30, backgroundColor: GRAY }}>\n\t\t\t\t\t\tConnecting...\n\t\t\t\t\t</CustomButton>\n\t\t\t\t)}\n\t\t\t</Block>\n\t\t\t<View style={{ marginTop: 30, flex: 1, flexDirection: 'row' }}>\n\t\t\t\t<CustomText style={{ fontSize: 16, marginLeft: 5, color: GREEN, fontWeight: 'bold' }} onPress={() => navigation.navigate('ForgotPassword')}>\n\t\t\t\t\tChange Password\n\t\t\t\t</CustomText>\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}