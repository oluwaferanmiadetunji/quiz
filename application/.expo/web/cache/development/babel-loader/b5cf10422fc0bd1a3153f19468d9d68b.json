{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/takeQuiz/Quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./style\";\nimport { Card } from 'react-native-elements';\nimport { _retrieveData } from \"../../utils/storage\";\nimport CustomButton from \"../../components/Button\";\nimport _ from 'lodash';\nimport Modal from 'react-native-modal';\nimport CountDown from 'react-native-countdown-component';\nimport { Block } from 'galio-framework';\nimport { makePostReq } from \"../../utils/api\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentQuestion = _useState4[0],\n      setCurrentQuestion = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      answer = _useState6[0],\n      setAnswer = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedIndex = _useState8[0],\n      setSelectedIndex = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      correctIndex = _useState10[0],\n      setCorrectIndex = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      numCorrect = _useState12[0],\n      setNumCorrect = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      answeredQuestions = _useState14[0],\n      setAnsweredQuestions = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      answered = _useState16[0],\n      setAnswered = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      open = _useState18[0],\n      setOpen = _useState18[1];\n\n  var _route$params = route.params,\n      duration = _route$params.duration,\n      questions = _route$params.questions,\n      userId = _route$params.userId;\n  useEffect(function () {\n    var q = questions[index];\n    setCurrentQuestion(q);\n\n    var shuffledAnswers = _.shuffle([].concat(_toConsumableArray(q.incorrectAnswers), [q.correctAnswer]));\n\n    setCorrectIndex(shuffledAnswers.indexOf(q.correctAnswer));\n    setAnswer(shuffledAnswers);\n  }, [index]);\n\n  var selectAnswer = function selectAnswer(index) {\n    setSelectedIndex(index);\n  };\n\n  var submit = function submit() {\n    if (selectedIndex === correctIndex) {\n      setNumCorrect(numCorrect + 1);\n    }\n\n    setAnswered(true);\n    var questionData = {};\n    questionData.isCorrect = selectedIndex === correctIndex ? true : false;\n    questionData.userPicked = answer[selectedIndex];\n    questionData.question = currentQuestion.question;\n    questionData.correctAnswer = currentQuestion.correctAnswer;\n    setAnsweredQuestions([].concat(_toConsumableArray(answeredQuestions), [questionData]));\n    setTimeout(function () {\n      index + 1 != questions.length ? next() : finish();\n    }, 3000);\n  };\n\n  var next = function next() {\n    setSelectedIndex(null);\n    setAnswered(false);\n    setIndex(index + 1);\n  };\n\n  var finish = function finish() {\n    return _regeneratorRuntime.async(function finish$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setTimeout(function () {\n              var data = {\n                uid: userId,\n                data: {\n                  questions: answeredQuestions,\n                  correct: numCorrect,\n                  total: questions.length\n                }\n              };\n              makePostReq('user/history/save', data).then(function (res) {\n                console.log(res);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n              navigation.navigate('Summary', {\n                data: data\n              });\n            }, 1500);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var answerClass = function answerClass(index) {\n    var answerClass = styles.button;\n\n    if (!answered && selectedIndex === index) {\n      answerClass = styles.selected;\n    } else if (answered && correctIndex === index) {\n      answerClass = styles.correct;\n    } else if (answered && selectedIndex === index && correctIndex !== index) {\n      answerClass = styles.incorrect;\n    }\n\n    return answerClass;\n  };\n\n  var textClass = function textClass(index) {\n    var textClass = styles.black;\n\n    if (!answered && selectedIndex === index) {\n      textClass = styles.white;\n    } else if (answered && correctIndex === index) {\n      textClass = styles.black;\n    } else if (answered && selectedIndex === index && correctIndex !== index) {\n      textClass = styles.white;\n    }\n\n    return textClass;\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      paddingTop: height * 0.07\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, React.createElement(Modal, {\n    isVisible: open,\n    animationIn: \"bounceInUp\",\n    backdropColor: \"black\",\n    backdropOpacity: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }, React.createElement(Block, {\n    style: {\n      width: width * 0.8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 22,\n      marginLeft: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, \"Are you sure you want to cancel this quiz?\"), React.createElement(CustomButton, {\n    style: {\n      marginTop: 30,\n      backgroundColor: 'green',\n      marginLeft: 15\n    },\n    onPress: function onPress() {\n      return setOpen(false);\n    },\n    textStyling: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, \"No, Stay\"), React.createElement(CustomButton, {\n    style: {\n      marginTop: 30,\n      backgroundColor: 'red',\n      marginLeft: 15\n    },\n    onPress: function onPress() {\n      setIndex(0);\n      setCurrentQuestion({});\n      setAnswer([]);\n      setSelectedIndex(null);\n      setCorrectIndex(null);\n      setNumCorrect(0);\n      setAnsweredQuestions([]);\n      setAnswered(false);\n      setOpen(false);\n      navigation.navigate('Home');\n    },\n    textStyling: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, \"Yes, Cancel\"))), React.createElement(View, {\n    style: {\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }, React.createElement(CountDown, {\n    until: duration * 60,\n    digitStyle: {\n      backgroundColor: '#060814'\n    },\n    digitTxtStyle: {\n      color: '#fff',\n      fontWeight: 'bold'\n    },\n    timeLabelStyle: {\n      color: '#000',\n      fontSize: 10\n    },\n    timeToShow: ['H', 'M', 'S'],\n    onFinish: finish,\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  })), React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    muted: true,\n    style: {\n      textAlign: 'center',\n      fontSize: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, \"Question \", index + 1, \" / \", questions.length), React.createElement(Card, {\n    containerStyle: {\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width * 0.8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    muted: true,\n    style: {\n      textAlign: 'center',\n      fontSize: 22\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, currentQuestion.question))), answer && answer.map(function (ans, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        answered ? null : selectAnswer(index);\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, React.createElement(Card, {\n      containerStyle: answerClass(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 8\n      }\n    }, React.createElement(View, {\n      style: {\n        width: width * 0.8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      muted: true,\n      style: textClass(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }\n    }, ans))));\n  })), React.createElement(Block, {\n    style: {\n      width: width * 0.8,\n      marginBottom: height * 0.05\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }\n  }, React.createElement(CustomButton, {\n    style: {\n      backgroundColor: 'green',\n      width: width * 0.8,\n      marginBottom: 20\n    },\n    onPress: function onPress() {\n      selectedIndex === null || answered ? null : submit();\n    },\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, \"Submit\"), React.createElement(CustomButton, {\n    style: {\n      backgroundColor: '#FB6340',\n      width: width * 0.8,\n      marginBottom: 20\n    },\n    onPress: finish,\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, \"Finish Quiz\"), React.createElement(CustomButton, {\n    style: {\n      backgroundColor: 'red',\n      width: width * 0.8,\n      marginBottom: 20\n    },\n    onPress: function onPress() {\n      return setOpen(true);\n    },\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, \"Cancel Quiz\")));\n});","map":{"version":3,"sources":["/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/takeQuiz/Quiz.js"],"names":["React","useEffect","useState","styles","Card","_retrieveData","CustomButton","_","Modal","CountDown","Block","makePostReq","Dimensions","get","height","width","navigation","route","index","setIndex","currentQuestion","setCurrentQuestion","answer","setAnswer","selectedIndex","setSelectedIndex","correctIndex","setCorrectIndex","numCorrect","setNumCorrect","answeredQuestions","setAnsweredQuestions","answered","setAnswered","open","setOpen","params","duration","questions","userId","q","shuffledAnswers","shuffle","incorrectAnswers","correctAnswer","indexOf","selectAnswer","submit","questionData","isCorrect","userPicked","question","setTimeout","length","next","finish","data","uid","correct","total","then","res","console","log","catch","err","navigate","answerClass","button","selected","incorrect","textClass","black","white","container","paddingTop","color","fontSize","marginLeft","marginTop","backgroundColor","marginBottom","fontWeight","scrollView","textAlign","map","ans"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Dimensions, SafeAreaView, Text, ScrollView, TouchableOpacity } from 'react-native';\nimport styles from './style';\nimport { Card } from 'react-native-elements';\nimport { _retrieveData } from '../../utils/storage';\nimport CustomButton from '../../components/Button';\nimport _ from 'lodash';\nimport Modal from 'react-native-modal';\nimport CountDown from 'react-native-countdown-component';\nimport { Block } from 'galio-framework';\nimport { makePostReq } from '../../utils/api';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default ({ navigation, route }) => {\n\tconst [index, setIndex] = useState(0);\n\tconst [currentQuestion, setCurrentQuestion] = useState({});\n\tconst [answer, setAnswer] = useState([]);\n\tconst [selectedIndex, setSelectedIndex] = useState(null);\n\tconst [correctIndex, setCorrectIndex] = useState(null);\n\tconst [numCorrect, setNumCorrect] = useState(0);\n\tconst [answeredQuestions, setAnsweredQuestions] = useState([]);\n\tconst [answered, setAnswered] = useState(false);\n\tconst [open, setOpen] = useState(false);\n\tconst { duration, questions, userId } = route.params;\n\n\tuseEffect(() => {\n\t\tlet q = questions[index];\n\t\tsetCurrentQuestion(q);\n\t\tlet shuffledAnswers = _.shuffle([...q.incorrectAnswers, q.correctAnswer]);\n\t\tsetCorrectIndex(shuffledAnswers.indexOf(q.correctAnswer));\n\t\tsetAnswer(shuffledAnswers);\n\t}, [index]);\n\n\tconst selectAnswer = (index) => {\n\t\tsetSelectedIndex(index);\n\t};\n\n\tconst submit = () => {\n\t\tif (selectedIndex === correctIndex) {\n\t\t\tsetNumCorrect(numCorrect + 1);\n\t\t}\n\t\tsetAnswered(true);\n\t\tlet questionData = {};\n\t\tquestionData.isCorrect = selectedIndex === correctIndex ? true : false;\n\t\tquestionData.userPicked = answer[selectedIndex];\n\t\tquestionData.question = currentQuestion.question;\n\t\tquestionData.correctAnswer = currentQuestion.correctAnswer;\n\n\t\tsetAnsweredQuestions([...answeredQuestions, questionData]);\n\n\t\tsetTimeout(() => {\n\t\t\tindex + 1 != questions.length ? next() : finish();\n\t\t}, 3000);\n\t};\n\n\tconst next = () => {\n\t\tsetSelectedIndex(null);\n\t\tsetAnswered(false);\n\t\tsetIndex(index + 1);\n\t};\n\n\tconst finish = async () => {\n\t\tsetTimeout(() => {\n\t\t\tconst data = {\n\t\t\t\tuid: userId,\n\t\t\t\tdata: { questions: answeredQuestions, correct: numCorrect, total: questions.length },\n\t\t\t};\n\t\t\tmakePostReq('user/history/save', data)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t})\n\t\t\t\t.catch((err) => console.log(err));\n\t\t\tnavigation.navigate('Summary', { data });\n\t\t}, 1500);\n\t};\n\n\tconst answerClass = (index) => {\n\t\tlet answerClass = styles.button;\n\t\tif (!answered && selectedIndex === index) {\n\t\t\tanswerClass = styles.selected;\n\t\t} else if (answered && correctIndex === index) {\n\t\t\tanswerClass = styles.correct;\n\t\t} else if (answered && selectedIndex === index && correctIndex !== index) {\n\t\t\tanswerClass = styles.incorrect;\n\t\t}\n\t\treturn answerClass;\n\t};\n\tconst textClass = (index) => {\n\t\tlet textClass = styles.black;\n\t\tif (!answered && selectedIndex === index) {\n\t\t\ttextClass = styles.white;\n\t\t} else if (answered && correctIndex === index) {\n\t\t\ttextClass = styles.black;\n\t\t} else if (answered && selectedIndex === index && correctIndex !== index) {\n\t\t\ttextClass = styles.white;\n\t\t}\n\t\treturn textClass;\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={{ ...styles.container, paddingTop: height * 0.07 }}>\n\t\t\t<Modal isVisible={open} animationIn='bounceInUp' backdropColor='black' backdropOpacity={1}>\n\t\t\t\t<Block style={{ width: width * 0.8 }}>\n\t\t\t\t\t<Text style={{ color: 'white', fontSize: 22, marginLeft: 15 }}>Are you sure you want to cancel this quiz?</Text>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\tstyle={{ marginTop: 30, backgroundColor: 'green', marginLeft: 15 }}\n\t\t\t\t\t\tonPress={() => setOpen(false)}\n\t\t\t\t\t\ttextStyling={{ color: 'white' }}>\n\t\t\t\t\t\tNo, Stay\n\t\t\t\t\t</CustomButton>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\tstyle={{ marginTop: 30, backgroundColor: 'red', marginLeft: 15 }}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetIndex(0);\n\t\t\t\t\t\t\tsetCurrentQuestion({});\n\t\t\t\t\t\t\tsetAnswer([]);\n\t\t\t\t\t\t\tsetSelectedIndex(null);\n\t\t\t\t\t\t\tsetCorrectIndex(null);\n\t\t\t\t\t\t\tsetNumCorrect(0);\n\t\t\t\t\t\t\tsetAnsweredQuestions([]);\n\t\t\t\t\t\t\tsetAnswered(false);\n\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t\tnavigation.navigate('Home');\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttextStyling={{ color: 'white' }}>\n\t\t\t\t\t\tYes, Cancel\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</Block>\n\t\t\t</Modal>\n\t\t\t<View style={{ marginBottom: 10 }}>\n\t\t\t\t<CountDown\n\t\t\t\t\tuntil={duration * 60}\n\t\t\t\t\tdigitStyle={{ backgroundColor: '#060814' }}\n\t\t\t\t\tdigitTxtStyle={{ color: '#fff', fontWeight: 'bold' }}\n\t\t\t\t\ttimeLabelStyle={{ color: '#000', fontSize: 10 }}\n\t\t\t\t\ttimeToShow={['H', 'M', 'S']}\n\t\t\t\t\tonFinish={finish}\n\t\t\t\t\tsize={15}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t<ScrollView style={styles.scrollView}>\n\t\t\t\t<Text muted style={{ textAlign: 'center', fontSize: 18 }}>\n\t\t\t\t\tQuestion {index + 1} / {questions.length}\n\t\t\t\t</Text>\n\t\t\t\t<Card containerStyle={{ marginBottom: 30 }}>\n\t\t\t\t\t<View style={{ width: width * 0.8 }}>\n\t\t\t\t\t\t<Text muted style={{ textAlign: 'center', fontSize: 22 }}>\n\t\t\t\t\t\t\t{currentQuestion.question}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</Card>\n\n\t\t\t\t{answer &&\n\t\t\t\t\tanswer.map((ans, index) => (\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tanswered ? null : selectAnswer(index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkey={index}>\n\t\t\t\t\t\t\t<Card containerStyle={answerClass(index)}>\n\t\t\t\t\t\t\t\t<View style={{ width: width * 0.8 }}>\n\t\t\t\t\t\t\t\t\t<Text muted style={textClass(index)}>\n\t\t\t\t\t\t\t\t\t\t{ans}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t))}\n\t\t\t</ScrollView>\n\t\t\t<Block style={{ width: width * 0.8, marginBottom: height * 0.05 }}>\n\t\t\t\t<CustomButton\n\t\t\t\t\tstyle={{ backgroundColor: 'green', width: width * 0.8, marginBottom: 20 }}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tselectedIndex === null || answered ? null : submit();\n\t\t\t\t\t}}\n\t\t\t\t\ttextStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }}>\n\t\t\t\t\tSubmit\n\t\t\t\t</CustomButton>\n\t\t\t\t<CustomButton\n\t\t\t\t\tstyle={{ backgroundColor: '#FB6340', width: width * 0.8, marginBottom: 20 }}\n\t\t\t\t\tonPress={finish}\n\t\t\t\t\ttextStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }}>\n\t\t\t\t\tFinish Quiz\n\t\t\t\t</CustomButton>\n\t\t\t\t<CustomButton\n\t\t\t\t\tstyle={{ backgroundColor: 'red', width: width * 0.8, marginBottom: 20 }}\n\t\t\t\t\tonPress={() => setOpen(true)}\n\t\t\t\t\ttextStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }}>\n\t\t\t\t\tCancel Quiz\n\t\t\t\t</CustomButton>\n\t\t\t</Block>\n\t\t</SafeAreaView>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}