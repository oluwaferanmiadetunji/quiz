{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/quiz/Quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport styles from \"./style\";\nimport CustomButton from \"../../components/Button\";\nimport CustomText from \"../../components/Text\";\nimport { GREEN, BLACK, GRAY } from \"../../components/Color\";\nimport show from \"../../utils/showMessage\";\nimport { makePostReq } from \"../../utils/api\";\nimport { _retrieveData } from \"../../utils/storage\";\nimport { Block, Input, Text } from 'galio-framework';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      course = _useState4[0],\n      setCourse = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      courses = _useState6[0],\n      setAllCourses = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      duration = _useState8[0],\n      setDuration = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      count = _useState10[0],\n      setCount = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      accountStatus = _useState12[0],\n      setStatus = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userId = _useState14[0],\n      setUserId = _useState14[1];\n\n  var handleSubmit = function handleSubmit() {\n    var c, _await$makePostReq, data, message, status;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            c = course ? course : courses[0].course;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(makePostReq('quiz', {\n              count: count,\n              status: accountStatus,\n              category: c\n            }));\n\n          case 5:\n            _await$makePostReq = _context.sent;\n            data = _await$makePostReq.data;\n            message = _await$makePostReq.message;\n            status = _await$makePostReq.status;\n\n            if (status === 'ok') {\n              setLoading(false);\n              navigation.navigate('TakeQuiz', {\n                questions: data,\n                duration: duration,\n                userId: userId\n              });\n            } else {\n              setLoading(false);\n              show(message, 'danger');\n            }\n\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            show('Something went wrong!', 'danger');\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var data, _JSON$parse, duration, count, status, uid;\n\n      return _regeneratorRuntime.async(function getData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = JSON;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(_retrieveData('Courses'));\n\n            case 3:\n              _context2.t1 = _context2.sent;\n              data = _context2.t0.parse.call(_context2.t0, _context2.t1);\n              _context2.t2 = JSON;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(_retrieveData('User'));\n\n            case 8:\n              _context2.t3 = _context2.sent;\n              _JSON$parse = _context2.t2.parse.call(_context2.t2, _context2.t3);\n              duration = _JSON$parse.duration;\n              count = _JSON$parse.count;\n              status = _JSON$parse.status;\n              uid = _JSON$parse.uid;\n              setCount(\"\" + count);\n              setDuration(\"\" + duration);\n              setAllCourses(data);\n              setStatus(status);\n              setUserId(uid);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      paddingTop: height * 0.05\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, React.createElement(CustomText, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, \"Set Quiz\"), React.createElement(Block, {\n    style: {\n      width: width * 0.8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    muted: true,\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Course\"), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.pickerView), {}, {\n      width: width * 0.8,\n      marginTop: 10\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    selectedValue: course,\n    style: styles.picker,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setCourse(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, courses.map(function (_ref2, index) {\n    var course = _ref2.course;\n    return React.createElement(Picker.Item, {\n      label: course,\n      value: course,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }\n    });\n  }))), React.createElement(Text, {\n    muted: true,\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"Exam Count\"), React.createElement(Input, {\n    placeholder: \"Exam Count\",\n    placeholderTextColor: BLACK,\n    value: count,\n    type: \"number-pad\",\n    color: BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    muted: true,\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Exam Duration\"), React.createElement(Input, {\n    placeholder: \"Exam Duration (minutes)\",\n    placeholderTextColor: BLACK,\n    value: duration,\n    type: \"number-pad\",\n    color: BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  })), loading && React.createElement(CustomButton, {\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    style: {\n      marginTop: 30,\n      backgroundColor: GRAY\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, \"Connecting...\"), !loading && React.createElement(CustomButton, {\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    style: {\n      marginTop: 30\n    },\n    onPress: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"Start\"), React.createElement(View, {\n    style: {\n      marginTop: 30,\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, React.createElement(CustomText, {\n    style: {\n      fontSize: 16,\n      marginLeft: 5,\n      color: GREEN,\n      fontWeight: 'bold'\n    },\n    onPress: function onPress() {\n      return navigation.navigate('Update');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"Change Settings\")));\n});","map":{"version":3,"sources":["/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/quiz/Quiz.js"],"names":["React","useState","useEffect","styles","CustomButton","CustomText","GREEN","BLACK","GRAY","show","makePostReq","_retrieveData","Block","Input","Text","Dimensions","get","height","width","navigation","loading","setLoading","course","setCourse","courses","setAllCourses","duration","setDuration","count","setCount","accountStatus","setStatus","userId","setUserId","handleSubmit","c","status","category","data","message","navigate","questions","getData","JSON","parse","uid","container","paddingTop","title","marginTop","pickerView","picker","itemValue","itemIndex","map","index","textAlign","fontSize","backgroundColor","flex","flexDirection","marginLeft","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Image, Dimensions, SafeAreaView, Picker } from 'react-native';\nimport styles from './style';\nimport CustomButton from '../../components/Button';\nimport CustomText from '../../components/Text';\nimport { GREEN, BLACK, GRAY } from '../../components/Color';\nimport show from '../../utils/showMessage';\nimport { makePostReq } from '../../utils/api';\nimport { _retrieveData } from '../../utils/storage';\nimport { Block, Input, Text } from 'galio-framework';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default ({ navigation }) => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [course, setCourse] = useState('');\n\tconst [courses, setAllCourses] = useState([]);\n\tconst [duration, setDuration] = useState('');\n\tconst [count, setCount] = useState('');\n\tconst [accountStatus, setStatus] = useState('');\n\tconst [userId, setUserId] = useState('');\n\n\tconst handleSubmit = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst c = course ? course : courses[0].course;\n\t\t\tconst { data, message, status } = await makePostReq('quiz', { count, status: accountStatus, category: c });\n\t\t\tif (status === 'ok') {\n\t\t\t\tsetLoading(false);\n\t\t\t\tnavigation.navigate('TakeQuiz', {\n\t\t\t\t\tquestions: data,\n\t\t\t\t\tduration,\n\t\t\t\t\tuserId,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetLoading(false);\n\t\t\t\tshow(message, 'danger');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tshow('Something went wrong!', 'danger');\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tconst data = JSON.parse(await _retrieveData('Courses'));\n\t\t\tconst { duration, count, status, uid } = JSON.parse(await _retrieveData('User'));\n\t\t\tsetCount(`${count}`);\n\t\t\tsetDuration(`${duration}`);\n\t\t\tsetAllCourses(data);\n\t\t\tsetStatus(status);\n\t\t\tsetUserId(uid);\n\t\t};\n\t\tgetData();\n\t}, []);\n\treturn (\n\t\t<SafeAreaView style={{ ...styles.container, paddingTop: height * 0.05 }}>\n\t\t\t<CustomText style={styles.title}>Set Quiz</CustomText>\n\n\t\t\t<Block style={{ width: width * 0.8 }}>\n\t\t\t\t<Text muted style={{ marginTop: 10 }}>\n\t\t\t\t\tCourse\n\t\t\t\t</Text>\n\t\t\t\t<View style={{ ...styles.pickerView, width: width * 0.8, marginTop: 10 }}>\n\t\t\t\t\t<Picker selectedValue={course} style={styles.picker} onValueChange={(itemValue, itemIndex) => setCourse(itemValue)}>\n\t\t\t\t\t\t{courses.map(({ course }, index) => (\n\t\t\t\t\t\t\t<Picker.Item label={course} value={course} key={index} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Picker>\n\t\t\t\t</View>\n\t\t\t\t<Text muted style={{ marginTop: 10 }}>\n\t\t\t\t\tExam Count\n\t\t\t\t</Text>\n\t\t\t\t<Input placeholder='Exam Count' placeholderTextColor={BLACK} value={count} type='number-pad' color={BLACK} />\n\t\t\t\t<Text muted style={{ marginTop: 10 }}>\n\t\t\t\t\tExam Duration\n\t\t\t\t</Text>\n\t\t\t\t<Input placeholder='Exam Duration (minutes)' placeholderTextColor={BLACK} value={duration} type='number-pad' color={BLACK} />\n\t\t\t</Block>\n\n\t\t\t{loading && (\n\t\t\t\t<CustomButton textStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }} style={{ marginTop: 30, backgroundColor: GRAY }}>\n\t\t\t\t\tConnecting...\n\t\t\t\t</CustomButton>\n\t\t\t)}\n\n\t\t\t{!loading && (\n\t\t\t\t<CustomButton textStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }} style={{ marginTop: 30 }} onPress={handleSubmit}>\n\t\t\t\t\tStart\n\t\t\t\t</CustomButton>\n\t\t\t)}\n\t\t\t<View style={{ marginTop: 30, flex: 1, flexDirection: 'row' }}>\n\t\t\t\t<CustomText style={{ fontSize: 16, marginLeft: 5, color: GREEN, fontWeight: 'bold' }} onPress={() => navigation.navigate('Update')}>\n\t\t\t\t\tChange Settings\n\t\t\t\t</CustomText>\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}