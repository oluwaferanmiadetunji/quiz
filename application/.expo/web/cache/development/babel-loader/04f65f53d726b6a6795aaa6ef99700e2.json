{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/history/History.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nimport { Card } from 'react-native-elements';\nimport { _retrieveData } from \"../../utils/storage\";\nimport dayjs from 'dayjs';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var data;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = JSON;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_retrieveData('User'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              data = _context.t0.parse.call(_context.t0, _context.t1);\n              setData(data.history);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      paddingTop: height * 0.01\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, data.map(function (_ref2, index) {\n    var data = _ref2.data;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return navigation.navigate('SingleHistory', {\n          details: data\n        });\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }\n    }, React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        width: width * 0.8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      muted: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, dayjs(data.createdAt).format('MMM DD, YYYY h:mm a')), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Number of Correct Answers: \", data.data.correct), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Number of Questions: \", data.data.total))));\n  })));\n});","map":{"version":3,"sources":["/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/history/History.js"],"names":["React","useEffect","useState","styles","Card","_retrieveData","dayjs","Dimensions","get","height","width","navigation","data","setData","getData","JSON","parse","history","container","paddingTop","scrollView","map","index","navigate","details","createdAt","format","text","correct","total"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,aAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;AAEhB,gBAAe,gBAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACVT,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MAC3BU,IAD2B;AAAA,MACrBC,OADqB;;AAGlCZ,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMa,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACFC,IADE;AAAA;AAAA,+CACeV,aAAa,CAAC,MAAD,CAD5B;;AAAA;AAAA;AACTO,cAAAA,IADS,eACGI,KADH;AAEfH,cAAAA,OAAO,CAACD,IAAI,CAACK,OAAN,CAAP;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAIAH,IAAAA,OAAO;AACP,GANQ,EAMN,EANM,CAAT;AAQA,SACC,oBAAC,YAAD;AAAc,IAAA,KAAK,kCAAOX,MAAM,CAACe,SAAd;AAAyBC,MAAAA,UAAU,EAAEV,MAAM,GAAG;AAA9C,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEN,MAAM,CAACiB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACER,IAAI,CAACS,GAAL,CAAS,iBAAWC,KAAX;AAAA,QAAGV,IAAH,SAAGA,IAAH;AAAA,WACT,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMD,UAAU,CAACY,QAAX,CAAoB,eAApB,EAAqC;AAAEC,UAAAA,OAAO,EAAEZ;AAAX,SAArC,CAAN;AAAA,OAAnC;AAAkG,MAAA,GAAG,EAAEU,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaJ,KAAK,CAACM,IAAI,CAACa,SAAN,CAAL,CAAsBC,MAAtB,CAA6B,qBAA7B,CAAb,CADD,EAEC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvB,MAAM,CAACwB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsDf,IAAI,CAACA,IAAL,CAAUgB,OAAhE,CAFD,EAGC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEzB,MAAM,CAACwB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAgDf,IAAI,CAACA,IAAL,CAAUiB,KAA1D,CAHD,CADD,CADD,CADS;AAAA,GAAT,CADF,CADD,CADD;AAiBA,CA5BD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Dimensions, SafeAreaView, Text, ScrollView, TouchableWithoutFeedback } from 'react-native';\nimport styles from './style';\nimport { Card } from 'react-native-elements';\nimport { _retrieveData } from '../../utils/storage';\nimport dayjs from 'dayjs';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default ({ navigation }) => {\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tconst data = JSON.parse(await _retrieveData('User'));\n\t\t\tsetData(data.history);\n\t\t};\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<SafeAreaView style={{ ...styles.container, paddingTop: height * 0.01 }}>\n\t\t\t<ScrollView style={styles.scrollView}>\n\t\t\t\t{data.map(({ data }, index) => (\n\t\t\t\t\t<TouchableWithoutFeedback onPress={() => navigation.navigate('SingleHistory', { details: data })} key={index}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<View style={{ width: width * 0.8 }}>\n\t\t\t\t\t\t\t\t<Text muted>{dayjs(data.createdAt).format('MMM DD, YYYY h:mm a')}</Text>\n\t\t\t\t\t\t\t\t<Text style={styles.text}>Number of Correct Answers: {data.data.correct}</Text>\n\t\t\t\t\t\t\t\t<Text style={styles.text}>Number of Questions: {data.data.total}</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t))}\n\t\t\t</ScrollView>\n\t\t</SafeAreaView>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}