{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/updateProfile/Update.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"./style\";\nimport CustomButton from \"../../components/Button\";\nimport CustomText from \"../../components/Text\";\nimport { BLACK, BLUE, GRAY } from \"../../components/Color\";\nimport { Input, Block, Text } from 'galio-framework';\nimport { makePostReq } from \"../../utils/api\";\nimport show from \"../../utils/showMessage\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nimport { _retrieveData, _storeData } from \"../../utils/storage\";\nexport default (function () {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      duration = _useState4[0],\n      setDuration = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var handleSubmit = function handleSubmit() {\n    var _await$makePostReq, status, message, data;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parseInt(count) > 50)) {\n              _context.next = 4;\n              break;\n            }\n\n            show('The maximum number of questions you can attempt is 50', 'warning');\n            _context.next = 20;\n            break;\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(makePostReq('user/update', {\n              name: name.trim(),\n              count: parseInt(count),\n              duration: parseInt(duration)\n            }));\n\n          case 7:\n            _await$makePostReq = _context.sent;\n            status = _await$makePostReq.status;\n            message = _await$makePostReq.message;\n            data = _await$makePostReq.data;\n\n            if (!(status === 'ok')) {\n              _context.next = 18;\n              break;\n            }\n\n            show(message, 'success');\n            setLoading(false);\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(_storeData('User', JSON.stringify(data)));\n\n          case 16:\n            _context.next = 20;\n            break;\n\n          case 18:\n            show(message, 'danger');\n            setLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var disabled = count.trim() === '' | duration.trim() === '' | name.trim() === '';\n\n  var disabledClass = function disabledClass() {\n    return disabled ? GRAY : BLUE;\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var data;\n      return _regeneratorRuntime.async(function getData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = JSON;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(_retrieveData('User'));\n\n            case 3:\n              _context2.t1 = _context2.sent;\n              data = _context2.t0.parse.call(_context2.t0, _context2.t1);\n              setName(data.name);\n              setCount(\"\" + data.count);\n              setDuration(\"\" + data.duration);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      paddingTop: height * 0.05\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, React.createElement(CustomText, {\n    style: {\n      fontSize: 25,\n      fontWeight: 'bold',\n      color: BLACK\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, \"Update Profile!\"), React.createElement(Block, {\n    style: {\n      width: width * 0.8,\n      marginTop: height * 0.03\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    muted: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Full Name\"), React.createElement(Input, {\n    placeholder: \"Full Name\",\n    placeholderTextColor: BLACK,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    type: \"default\",\n    color: BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    muted: true,\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"Exam Count\"), React.createElement(Input, {\n    placeholder: \"Exam Count\",\n    placeholderTextColor: BLACK,\n    onChangeText: function onChangeText(text) {\n      return setCount(text);\n    },\n    value: count,\n    type: \"number-pad\",\n    color: BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    muted: true,\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Exam Duration\"), React.createElement(Input, {\n    placeholder: \"Exam Duration (minutes)\",\n    placeholderTextColor: BLACK,\n    onChangeText: function onChangeText(text) {\n      return setDuration(text);\n    },\n    value: duration,\n    type: \"number-pad\",\n    color: BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), loading && React.createElement(CustomButton, {\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    style: {\n      marginTop: 30,\n      backgroundColor: GRAY\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, \"Connecting...\"), !loading && React.createElement(CustomButton, {\n    textStyling: {\n      width: width * 0.7,\n      textAlign: 'center',\n      fontSize: 16\n    },\n    style: {\n      marginTop: 30,\n      backgroundColor: disabledClass()\n    },\n    onPress: disabled ? null : handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, \"Update\")));\n});","map":{"version":3,"sources":["/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/screens/updateProfile/Update.js"],"names":["React","useEffect","useState","styles","CustomButton","CustomText","BLACK","BLUE","GRAY","Input","Block","Text","makePostReq","show","Dimensions","get","height","width","_retrieveData","_storeData","count","setCount","duration","setDuration","name","setName","loading","setLoading","handleSubmit","parseInt","trim","status","message","data","JSON","stringify","disabled","disabledClass","getData","parse","container","paddingTop","fontSize","fontWeight","color","marginTop","text","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Dimensions, SafeAreaView } from 'react-native';\nimport styles from './style';\nimport CustomButton from '../../components/Button';\nimport CustomText from '../../components/Text';\nimport { BLACK, BLUE, GRAY } from '../../components/Color';\nimport { Input, Block, Text } from 'galio-framework';\nimport { makePostReq } from '../../utils/api';\nimport show from '../../utils/showMessage';\nconst { height, width } = Dimensions.get('window');\nimport { _retrieveData, _storeData } from '../../utils/storage';\n\nexport default () => {\n\tconst [count, setCount] = useState('');\n\tconst [duration, setDuration] = useState('');\n\tconst [name, setName] = useState('');\n\n\tconst [loading, setLoading] = useState(false);\n\n\tconst handleSubmit = async () => {\n\t\tif (parseInt(count) > 50) {\n\t\t\tshow('The maximum number of questions you can attempt is 50', 'warning');\n\t\t} else {\n\t\t\tsetLoading(true);\n\t\t\tconst { status, message, data } = await makePostReq('user/update', { name: name.trim(), count: parseInt(count), duration: parseInt(duration) });\n\t\t\tif (status === 'ok') {\n\t\t\t\tshow(message, 'success');\n\t\t\t\tsetLoading(false);\n\t\t\t\tawait _storeData('User', JSON.stringify(data));\n\t\t\t} else {\n\t\t\t\tshow(message, 'danger');\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst disabled = (count.trim() === '') | (duration.trim() === '') | (name.trim() === '');\n\n\tconst disabledClass = () => {\n\t\treturn disabled ? GRAY : BLUE;\n\t};\n\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tconst data = JSON.parse(await _retrieveData('User'));\n\t\t\tsetName(data.name);\n\t\t\tsetCount(`${data.count}`);\n\t\t\tsetDuration(`${data.duration}`);\n\t\t};\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<SafeAreaView style={{ ...styles.container, paddingTop: height * 0.05 }}>\n\t\t\t<CustomText style={{ fontSize: 25, fontWeight: 'bold', color: BLACK }}>Update Profile!</CustomText>\n\t\t\t<Block style={{ width: width * 0.8, marginTop: height * 0.03 }}>\n\t\t\t\t<Text muted>Full Name</Text>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder='Full Name'\n\t\t\t\t\tplaceholderTextColor={BLACK}\n\t\t\t\t\tonChangeText={(text) => setName(text)}\n\t\t\t\t\tvalue={name}\n\t\t\t\t\ttype='default'\n\t\t\t\t\tcolor={BLACK}\n\t\t\t\t/>\n\t\t\t\t<Text muted style={{ marginTop: 10 }}>\n\t\t\t\t\tExam Count\n\t\t\t\t</Text>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder='Exam Count'\n\t\t\t\t\tplaceholderTextColor={BLACK}\n\t\t\t\t\tonChangeText={(text) => setCount(text)}\n\t\t\t\t\tvalue={count}\n\t\t\t\t\ttype='number-pad'\n\t\t\t\t\tcolor={BLACK}\n\t\t\t\t/>\n\t\t\t\t<Text muted style={{ marginTop: 10 }}>\n\t\t\t\t\tExam Duration\n\t\t\t\t</Text>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder='Exam Duration (minutes)'\n\t\t\t\t\tplaceholderTextColor={BLACK}\n\t\t\t\t\tonChangeText={(text) => setDuration(text)}\n\t\t\t\t\tvalue={duration}\n\t\t\t\t\ttype='number-pad'\n\t\t\t\t\tcolor={BLACK}\n\t\t\t\t/>\n\n\t\t\t\t{loading && (\n\t\t\t\t\t<CustomButton textStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }} style={{ marginTop: 30, backgroundColor: GRAY }}>\n\t\t\t\t\t\tConnecting...\n\t\t\t\t\t</CustomButton>\n\t\t\t\t)}\n\t\t\t\t{!loading && (\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttextStyling={{ width: width * 0.7, textAlign: 'center', fontSize: 16 }}\n\t\t\t\t\t\tstyle={{ marginTop: 30, backgroundColor: disabledClass() }}\n\t\t\t\t\t\tonPress={disabled ? null : handleSubmit}>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</CustomButton>\n\t\t\t\t)}\n\t\t\t</Block>\n\t\t</SafeAreaView>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}