{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { _retrieveData } from \"./storage\";\nvar BASE_URL = 'https://us-central1-quiz-a893a.cloudfunctions.net/api';\nexport var makePostReq = function makePostReq(path, data) {\n  var token, config, response;\n  return _regeneratorRuntime.async(function makePostReq$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(_retrieveData('Token'));\n\n        case 2:\n          token = _context.sent;\n          config = {\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          };\n          _context.prev = 4;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(axios.post(BASE_URL + \"/\" + path, data, config));\n\n        case 7:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](4);\n          return _context.abrupt(\"return\", _context.t0.response.data);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 11]], Promise);\n};\nexport var makeGetReq = function makeGetReq(path) {\n  var token, config, response;\n  return _regeneratorRuntime.async(function makeGetReq$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(_retrieveData('Token'));\n\n        case 2:\n          token = _context2.sent;\n          config = {\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          };\n          _context2.prev = 4;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL + \"/\" + path, config));\n\n        case 7:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.data);\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](4);\n          return _context2.abrupt(\"return\", _context2.t0.response.data);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[4, 11]], Promise);\n};","map":{"version":3,"sources":["/home/oluwaferanmiadetunji/Documents/Workspace/freelance/quiz/application/utils/api.js"],"names":["axios","_retrieveData","BASE_URL","makePostReq","path","data","token","config","headers","Authorization","post","response","makeGetReq","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,IAAMC,QAAQ,GAAG,uDAAjB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,IAAP,EAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNJ,aAAa,CAAC,OAAD,CADP;;AAAA;AACpBK,UAAAA,KADoB;AAEpBC,UAAAA,MAFoB,GAEX;AACdC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,cAAYH;AAA3B;AADK,WAFW;AAAA;AAAA;AAAA,2CAMFN,KAAK,CAACU,IAAN,CAAcR,QAAd,SAA0BE,IAA1B,EAAkCC,IAAlC,EAAwCE,MAAxC,CANE;;AAAA;AAMnBI,UAAAA,QANmB;AAAA,2CAOlBA,QAAQ,CAACN,IAPS;;AAAA;AAAA;AAAA;AAAA,2CASlB,YAAIM,QAAJ,CAAaN,IATK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAaP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAAOR,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLH,aAAa,CAAC,OAAD,CADR;;AAAA;AACnBK,UAAAA,KADmB;AAEnBC,UAAAA,MAFmB,GAEV;AACdC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,cAAYH;AAA3B;AADK,WAFU;AAAA;AAAA;AAAA,2CAMDN,KAAK,CAACa,GAAN,CAAaX,QAAb,SAAyBE,IAAzB,EAAiCG,MAAjC,CANC;;AAAA;AAMlBI,UAAAA,QANkB;AAAA,4CAOjBA,QAAQ,CAACN,IAPQ;;AAAA;AAAA;AAAA;AAAA,4CASjB,aAAIM,QAAJ,CAAaN,IATI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import axios from 'axios';\nimport { _retrieveData } from './storage';\nconst BASE_URL = 'https://us-central1-quiz-a893a.cloudfunctions.net/api';\n\nexport const makePostReq = async (path, data) => {\n\tconst token = await _retrieveData('Token');\n\tconst config = {\n\t\theaders: { Authorization: `Bearer ${token}` },\n\t};\n\ttry {\n\t\tconst response = await axios.post(`${BASE_URL}/${path}`, data, config);\n\t\treturn response.data;\n\t} catch (err) {\n\t\treturn err.response.data;\n\t}\n};\n\nexport const makeGetReq = async (path) => {\n\tconst token = await _retrieveData('Token');\n\tconst config = {\n\t\theaders: { Authorization: `Bearer ${token}` },\n\t};\n\ttry {\n\t\tconst response = await axios.get(`${BASE_URL}/${path}`, config);\n\t\treturn response.data;\n\t} catch (err) {\n\t\treturn err.response.data;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}